# Generated by Django 4.0.3 on 2022-05-09 02:21

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('appForeground', '0002_rename_appforeground_applicationsforeground'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AwareDevice',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('board', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('device', models.TextField(blank=True, null=True)),
                ('build_id', models.TextField(blank=True, null=True)),
                ('hardware', models.TextField(blank=True, null=True)),
                ('manufacturer', models.TextField(blank=True, null=True)),
                ('model', models.TextField(blank=True, null=True)),
                ('product', models.TextField(blank=True, null=True)),
                ('serial', models.TextField(blank=True, null=True)),
                ('release', models.TextField(blank=True, null=True)),
                ('release_type', models.TextField(blank=True, null=True)),
                ('sdk', models.TextField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'aware_device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('battery_status', models.IntegerField(blank=True, null=True)),
                ('battery_level', models.IntegerField(blank=True, null=True)),
                ('battery_scale', models.IntegerField(blank=True, null=True)),
                ('battery_voltage', models.IntegerField(blank=True, null=True)),
                ('battery_temperature', models.IntegerField(blank=True, null=True)),
                ('battery_adaptor', models.IntegerField(blank=True, null=True)),
                ('battery_health', models.IntegerField(blank=True, null=True)),
                ('battery_technology', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'battery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BatteryCharges',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('battery_start', models.IntegerField(blank=True, null=True)),
                ('battery_end', models.IntegerField(blank=True, null=True)),
                ('double_end_timestamp', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'battery_charges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BatteryDischarges',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('battery_start', models.IntegerField(blank=True, null=True)),
                ('battery_end', models.IntegerField(blank=True, null=True)),
                ('double_end_timestamp', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'battery_discharges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bluetooth',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('bt_address', models.CharField(blank=True, max_length=150, null=True)),
                ('bt_name', models.TextField(blank=True, null=True)),
                ('bt_rssi', models.IntegerField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bluetooth',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calls',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('call_type', models.IntegerField(blank=True, null=True)),
                ('call_duration', models.IntegerField(blank=True, null=True)),
                ('trace', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calls',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('double_latitude', models.FloatField(blank=True, null=True)),
                ('double_longitude', models.FloatField(blank=True, null=True)),
                ('double_bearing', models.FloatField(blank=True, null=True)),
                ('double_speed', models.FloatField(blank=True, null=True)),
                ('double_altitude', models.FloatField(blank=True, null=True)),
                ('provider', models.TextField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('message_type', models.IntegerField(blank=True, null=True)),
                ('trace', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('field_id', models.AutoField(db_column='_id', primary_key=True, serialize=False)),
                ('timestamp', models.FloatField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=150, null=True)),
                ('screen_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'screen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsSms',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sms_id', models.IntegerField()),
                ('device_id', models.CharField(max_length=150)),
                ('message_type', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('trace', models.TextField()),
            ],
            options={
                'db_table': 'sms_sms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbAdmin',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('emailadress', models.CharField(db_column='emailAdress', max_length=255)),
            ],
            options={
                'db_table': 'tb_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbClient',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('clinicianid', models.CharField(db_column='clinicianId', max_length=255)),
                ('clienttitle', models.CharField(blank=True, db_column='clientTitle', max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('dateofbirth', models.CharField(blank=True, db_column='dateOfBirth', max_length=255, null=True)),
                ('textnotes', models.TextField(blank=True, db_column='textNotes', null=True)),
                ('twitterid', models.CharField(blank=True, db_column='twitterId', max_length=255, null=True)),
                ('facebookid', models.CharField(blank=True, db_column='facebookId', max_length=255, null=True)),
                ('awaredeviceid', models.CharField(blank=True, db_column='awareDeviceId', max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('emailaddress', models.CharField(db_column='emailAddress', max_length=255)),
            ],
            options={
                'db_table': 'tb_client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbClinician',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('emailaddress', models.CharField(db_column='emailAddress', max_length=255)),
            ],
            options={
                'db_table': 'tb_clinician',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='applicationsforeground',
            options={'managed': False},
        ),
    ]
